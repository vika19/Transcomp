cdna="$1"
cds="$2"
table="$3"

cat $cdna | fasta2oneline.ba | tr '\n' '$' | sed -e 's/$>/\n>/g' -e 's/$/ /g' | awk '{print $1,length($NF)}' > $cdna.hash

cat $cds | fasta2oneline.ba | sed -E -e 's/lcl\|.*ORF[0-9]*_//g' -e 's/:([0-9]*):([0-9]*)/ \1 \2/g' -e 's/>/$>/g' | tr '\n' '&' | sed 's/&/& /g' |tr '$' '\n' > $cds.intermed

awk 'NR==FNR {a[$1]=$2; next} NR>FNR {print $1" +", a[$1], $3-$2, $2, $3, $4, $5, $6}' $cdna.hash $cds.intermed | sort -k1,1 -k4,4rn | sort -uk1,1 | sed 1d > $cds.tmp

cat $cds.tmp | awk '{if ($3!=0) {print $1, "type=cds; aalen="($4+1)/3","int(($4/$3)*100)"%,CLASS; clen="$3"; strand="$2"; offs="$5"-"$6";"$7}}' | sed -e 's/&;/;\n/g' -e 's/&//g' -e 's/_[0-9]* //g'> $cds.tmp2

#cat $cds.tmp2 | tr '\n' '@' | sed 's/@>/\n>/g' | sed 's/[=,]/ /g' | sed 's/@/ @/g' | 

#awk 'BEGIN{
#     table="'$table'";
#     start["ATG"]= ",1,2,4,6,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,32,";
#     start["ATT"]= ",2,4,5,11,23,32,";
#     start["ATC"]= ",2,4,5,11,32,";
#     start["ATA"]= ",2,3,4,5,11,13,32,";	
#     start["GTG"]= ",3,9,11,13,23,24,25,32,";
#     start["CTG"]= ",1,4,11,12,24,26,32,";
#     start["TTG"]= ",1,4,5,24,25,32,";
#     start["TAA"]= ",4,";
#     end["TAA"]= ",1,2,3,4,5,10,11,12,13,16,21,23,24,25,26,28,31,32,";
#     end["TAG"]= ",1,2,3,4,5,6,9,10,11,12,13,14,21,22,23,24,25,26,28,31,30,";
#     end["TGA"]= ",1,6,11,12,13,16,22,23,26,28,32,";
#     end["TAA"]= ",2,3,4,9,10,11,12,13,16,21,23,24,25,26,28,31,32,";
#     end["AGA"]= ",2,";
#     end["AGG"]= ",2,";
#     end["TCA"]= ",22,";
#     end["TTA"]= ",23,";
#     starts="F";
#     ends="F";
#     }
#     {if (index(start[substr($14,2,3)], ","table",") != 0)
#        starts="T"
#     else
#	starts="F"

#     if (index(end[substr($14,length($14)-2,length($14))], ","table",") != 0)
#        ends="T";
#     else
#    	ends="F";
#     }

#     {if (starts=="T" && ends=="T") x = "complete"; 
#      else if (starts=="F" && ends=="T") x="partial3"; 
#      else if (starts=="T" && ends=="F") x="partial5"; 
#      else x="partial"}
#     {clen=substr($9,1,length($9)-1); 
#      aalen=substr($5,1,length($5)-1)
#      remainder= clen - (aalen*3)

#      if (x=="complete" && remainder <=70) y="-utrbad";
#      else if (x=="complete" && remainder <=120) y="-utrpoor";
#      else if (x!="complete" && remainder <=35) y="-utrbad";
#      else if (x!="complete" && remainder <=70) y="-utrpoor"}

#     {tag=sprintf("%s%s", x, y)
#      gsub("CLASS",tag,$0)
#      print $0}' | 

#sed -E -e 's/@/\n/g' -e 's/aalen\ -*([0-9]*).*\ -*([0-9.]*)%\ /aalen=\1,\2%,/g' -e 's/clen\ /clen=/g' -e 's/strand\ /strand=/g' -e 's/offs\ /offs=/g' -e 's/type\ /type=/g' -e 's/\*//g' > $cds.tmp3

#mv $cds.tmp3 $cds
#rm $cds.tmp
#rm $cds.tmp2
#rm $cds.intermed
